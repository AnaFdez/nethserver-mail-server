#!/usr/bin/perl

#
# NethServer
#
# Copyright (C) 2012 Nethesis srl
# See COPYING for licensing informations
#

use NethServer::Service;
use NethServer::Directory;
use esmith::ConfigDB;
use User::grent;
use strict;


#
# Remove the LDAP misc schema, because it conflicts with qmail schema
#
my @schemas = glob('/etc/openldap/slapd.d/cn\=config/cn\=schema/cn=\{*\}misc.ldif');
if(@schemas) {
    NethServer::Service::stop('slapd');
    unlink @schemas;
    NethServer::Service::start('slapd');
    sleep 5;
}

#
# Connect and load the qmail schema:
#
my $ldap = NethServer::Directory::connect();
$ldap->loadLdifSchema('qmail', '/etc/openldap/schema/qmail.ldif') || die("Could not load the qmail LDIF schema for dovecot");

#
# Manage dovecot daemon
#
NethServer::Service::manage_add('nethserver-mail-server',
				'dovecot');

#
# Register some postfix tables to be updated with nethserver-mail-postmap-update action
#
my $configDb = esmith::ConfigDB->open() || die("Could not open ConfigDB");
my @postmapUpdateList = split(',', $configDb->get_prop('postfix', 'PostmapUpdateList'));

foreach my $table (qw(
    internal_access
    recipient_bcc
    virtual
)) {
    if ( ! grep($table eq $_, @postmapUpdateList) ) {
	push @postmapUpdateList, $table;
    }
}

$configDb->set_prop('postfix', 'PostmapUpdateList', join(',', @postmapUpdateList));

# Refs #1516 -- Add vmail user into amavis group, to allow bayes DB
# updates through sa-learn
{
    my $amavisGroup = getgrnam('amavis') or die('Could not find amavis group');
    
    if( ! grep { $_ eq 'vmail'} @{$amavisGroup->members()} ) {
	system('/usr/sbin/usermod', qw(-a -G amavis vmail));
	if( $? != 0) {
	    die;
	}
    }

}




