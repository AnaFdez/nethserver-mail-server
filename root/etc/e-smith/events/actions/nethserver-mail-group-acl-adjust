#!/usr/bin/perl

#
# nethserver-mail-group-acl-adjust
#
# Keep IMAP ACLs updated for group accounts. The optional 2nd argument
# limits the operation on the given group account only.
#

#
# Copyright (C) 2012 Nethesis S.r.l.
# http://www.nethesis.it - support@nethesis.it
# 
# This script is part of NethServer.
# 
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
# 
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see <http://www.gnu.org/licenses/>.
#

use strict;
use esmith::AccountsDB;
use NethServer::MailServer;


my $accountsDb = esmith::AccountsDB->open_ro();

my $event = shift || die("Missing event argument");
my $accountArg = shift;

my @accounts = ();
my $errors = 0;

if($accountArg) {
    @accounts = @{[$accountsDb->get($accountArg)]};
} else {
    @accounts = $accountsDb->groups();
}

my $vmailGid = (getgrnam('vmail'))[2] or die('Missing vmail group');
my $vmailUid = (getpwnam('vmail'))[2] or die('Missing vmail user'); 

foreach my $accountRecord (@accounts) {

    my $account = $accountRecord->key;
    my $retval;

    if($accountRecord->prop('type') ne 'group') {
	warn("[ERROR] Account `$account` is not a group\n");
	$errors ++;
	next;
    }

    # Skip group if mail is disabled. Fixes #1560
    if($accountRecord->prop('MailStatus') ne 'enabled') {
	next;
    }

    my $imap = NethServer::MailServer->connectAclManager($account . '*vmail');
	    
    if( ! $imap) {
	warn("[ERROR] Could not create connection to IMAP server. Account: `$account`.\n");
	$errors ++;
	next;
    }
        
    my $dovecotSharedPath = NethServer::MailServer::getDovecotSharedPath($account);

    #
    # Set/Unset group ($) ACL to share the INBOX folder    
    #
    my $deliveryType = $accountRecord->prop('MailDeliveryType');
    if($deliveryType eq 'copy' || $accountRecord->prop('MailStatus') eq 'disabled') {
	$retval = $imap->deleteAcl('INBOX', '$' . $account);
	unlink($dovecotSharedPath);
    } elsif($deliveryType eq 'shared') {
	$retval = $imap->setAcl('INBOX', '$' . $account, 'lrs');
	open(T, '>', $dovecotSharedPath) && close(T) && chown $vmailUid, $vmailGid, $dovecotSharedPath;
    } else {
	warn("[WARNING] Unknown delivery type: $deliveryType\n");
	$retval = 1;
    }

    if( ! $retval) {
	warn("[ERROR] IMAP error for account $account: " . $imap->getErrorMessage());
	$errors ++;
    }

    $imap->logout();
}


exit ($errors == 0 ? 0 : 1);
